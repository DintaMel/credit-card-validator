{"ast":null,"code":"var _jsxFileName = \"/Users/melissadintaman/Projects/credit-card-validator/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //TODO: add typescript\n  // TODO: write tests\n\n  const [isValid, setIsValid] = useState();\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n    if (formattedCreditCardNumber.length < 12 || formattedCreditCardNumber > 19) {\n      setIsValid(false);\n      return;\n    }\n    console.log('submitted', formattedCreditCardNumber);\n    await fetch('/credit-card-validity', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cc-number': formattedCreditCardNumber\n      })\n    }).then(response => response.json()).then(data => {\n      setIsValid(data.isValid);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        handleSubmit(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cc-number\",\n        children: \"Credit Card Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"credit-card\",\n        onChange: event => {\n          setCreditCardNumber(event.target.value);\n          setIsValid();\n        },\n        autoComplete: \"cc-number\",\n        inputMode: \"numeric\",\n        name: \"cc-number\"\n        //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n        ,\n        maxLength: \"25\",\n        minLength: \"12\"\n        //regex to only allow digits with spaces and dashes\n        ,\n        pattern: \"([0-9 \\\\-]){12,25}\",\n        title: \"Credit card numbers must be between 12 and 19 digits long.\",\n        value: creditCardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), typeof isValid === 'boolean' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Credit card number \", creditCardNumber, \" is\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: isValid ? 'valid' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nr0CSXn+98e/R+2iXTyRtLhrzX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","isValid","setIsValid","creditCardNumber","setCreditCardNumber","handleSubmit","event","preventDefault","formattedCreditCardNumber","replace","length","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","autoComplete","inputMode","name","maxLength","minLength","pattern","title","_c","$RefreshReg$"],"sources":["/Users/melissadintaman/Projects/credit-card-validator/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  //TODO: add typescript\n  // TODO: write tests\n\n  const [isValid, setIsValid] = useState();\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n\n    if (\n      formattedCreditCardNumber.length < 12 ||\n      formattedCreditCardNumber > 19\n    ) {\n      setIsValid(false);\n      return;\n    }\n    console.log('submitted', formattedCreditCardNumber);\n\n    await fetch('/credit-card-validity', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ 'cc-number': formattedCreditCardNumber }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setIsValid(data.isValid);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        {/* <form method=\"post\" onSubmit={handleSubmit}> */}\n        <label htmlFor=\"cc-number\">Credit Card Number: </label>\n        <input\n          type=\"text\"\n          id=\"credit-card\"\n          onChange={(event) => {\n            setCreditCardNumber(event.target.value);\n            setIsValid();\n          }}\n          autoComplete=\"cc-number\"\n          inputMode=\"numeric\"\n          name=\"cc-number\"\n          //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n          maxLength=\"25\"\n          minLength=\"12\"\n          //regex to only allow digits with spaces and dashes\n          pattern=\"([0-9 \\-]){12,25}\"\n          title=\"Credit card numbers must be between 12 and 19 digits long.\"\n          value={creditCardNumber}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {typeof isValid === 'boolean' && (\n        <p>\n          Credit card number {creditCardNumber} is{' '}\n          <strong>{isValid ? 'valid' : 'invalid'}</strong>.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}