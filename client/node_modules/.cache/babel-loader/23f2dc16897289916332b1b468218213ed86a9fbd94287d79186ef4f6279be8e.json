{"ast":null,"code":"var _jsxFileName = \"/Users/melissadintaman/Projects/credit-card-validator/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //TODO: add typescript\n  // TODO: write tests\n\n  const [isValid, setIsValid] = useState();\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n  const [checkedCreditCardNumber, setCheckedCreditCardNumber] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n    if (formattedCreditCardNumber.length < 12 || formattedCreditCardNumber > 19) {\n      // TODO: fix\n\n      setCheckedCreditCardNumber(formattedCreditCardNumber);\n      setIsValid(false);\n      return;\n    }\n    console.log('submitted', formattedCreditCardNumber);\n    await fetch('/credit-card-validity', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'cc-number': formattedCreditCardNumber\n      })\n    }).then(response => response.json()).then(data => {\n      // TODO: fix\n      setCheckedCreditCardNumber(formattedCreditCardNumber);\n      setIsValid(data.isValid);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        handleSubmit(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cc-number\",\n        children: \"Credit Card Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"credit-card\",\n        onChange: event => {\n          setCreditCardNumber(event.target.value);\n          setIsValid();\n        },\n        autoComplete: \"cc-number\",\n        inputMode: \"numeric\",\n        name: \"cc-number\"\n        //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n        ,\n        maxLength: \"25\",\n        minLength: \"12\"\n        //regex to only allow digits with spaces and dashes\n        ,\n        pattern: \"([0-9 \\\\-]){12,25}\",\n        title: \"Credit card numbers must be between 12 and 19 digits long.\",\n        value: creditCardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), typeof isValid === 'boolean' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Credit card number \", checkedCreditCardNumber, \" is\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: isValid ? 'valid' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SWU7KnWoM/UEdje2p/pEXHIoS5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","isValid","setIsValid","creditCardNumber","setCreditCardNumber","checkedCreditCardNumber","setCheckedCreditCardNumber","handleSubmit","event","preventDefault","formattedCreditCardNumber","replace","length","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","autoComplete","inputMode","name","maxLength","minLength","pattern","title","_c","$RefreshReg$"],"sources":["/Users/melissadintaman/Projects/credit-card-validator/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  //TODO: add typescript\n  // TODO: write tests\n\n  const [isValid, setIsValid] = useState();\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n  const [checkedCreditCardNumber, setCheckedCreditCardNumber] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n\n    if (\n      formattedCreditCardNumber.length < 12 ||\n      formattedCreditCardNumber > 19\n    ) {\n      // TODO: fix\n\n      setCheckedCreditCardNumber(formattedCreditCardNumber);\n      setIsValid(false);\n      return;\n    }\n    console.log('submitted', formattedCreditCardNumber);\n\n    await fetch('/credit-card-validity', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ 'cc-number': formattedCreditCardNumber }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // TODO: fix\n        setCheckedCreditCardNumber(formattedCreditCardNumber);\n\n        setIsValid(data.isValid);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        {/* <form method=\"post\" onSubmit={handleSubmit}> */}\n        <label htmlFor=\"cc-number\">Credit Card Number: </label>\n        <input\n          type=\"text\"\n          id=\"credit-card\"\n          onChange={(event) => {\n            setCreditCardNumber(event.target.value);\n            setIsValid();\n          }}\n          autoComplete=\"cc-number\"\n          inputMode=\"numeric\"\n          name=\"cc-number\"\n          //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n          maxLength=\"25\"\n          minLength=\"12\"\n          //regex to only allow digits with spaces and dashes\n          pattern=\"([0-9 \\-]){12,25}\"\n          title=\"Credit card numbers must be between 12 and 19 digits long.\"\n          value={creditCardNumber}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {typeof isValid === 'boolean' && (\n        <p>\n          Credit card number {checkedCreditCardNumber} is{' '}\n          <strong>{isValid ? 'valid' : 'invalid'}</strong>.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}