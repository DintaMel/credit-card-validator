{"ast":null,"code":"var _jsxFileName = \"/Users/melissadintaman/Projects/credit-card-validator/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isValid, setIsValid] = useState();\n  const [isError, setIsError] = useState(false);\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n    if (formattedCreditCardNumber.length < 12 || formattedCreditCardNumber.length > 19) {\n      setIsValid(false);\n      return;\n    }\n    try {\n      throw new Error('Oh no!');\n      await fetch('/credit-card-validity', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'cc-number': formattedCreditCardNumber\n        })\n      }).then(response => response.json()).then(data => {\n        setIsValid(data.isValid);\n      });\n    } catch (error) {\n      console.log('error');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        handleSubmit(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cc-number\",\n        children: \"Credit Card Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"credit-card\",\n        onChange: event => {\n          setCreditCardNumber(event.target.value);\n          setIsValid(undefined);\n        },\n        autoComplete: \"cc-number\",\n        inputMode: \"numeric\",\n        name: \"cc-number\"\n        //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n        ,\n        maxLength: 25,\n        minLength: 12\n        //regex to only allow digits with spaces and dashes\n        ,\n        pattern: \"([0-9 \\\\-]){12,25}\",\n        title: \"Credit card numbers must be between 12 and 19 digits long.\",\n        value: creditCardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"'There was an error checking the validity of the credit card number'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), typeof isValid === 'boolean' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Credit card number \", creditCardNumber, \" is\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: isValid ? 'valid' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rv+aIuF5KnQTdM5qzec6XnGujYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isValid","setIsValid","isError","setIsError","creditCardNumber","setCreditCardNumber","handleSubmit","event","preventDefault","formattedCreditCardNumber","replace","length","Error","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","undefined","autoComplete","inputMode","name","maxLength","minLength","pattern","title","_c","$RefreshReg$"],"sources":["/Users/melissadintaman/Projects/credit-card-validator/client/src/App.tsx"],"sourcesContent":["import React, { SyntheticEvent, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isValid, setIsValid] = useState<boolean | undefined>();\n  const [isError, setIsError] = useState(false);\n  const [creditCardNumber, setCreditCardNumber] = useState('');\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n\n    const formattedCreditCardNumber = creditCardNumber.replace(/[ ,-]/g, '');\n\n    if (\n      formattedCreditCardNumber.length < 12 ||\n      formattedCreditCardNumber.length > 19\n    ) {\n      setIsValid(false);\n      return;\n    }\n    try {\n      throw new Error('Oh no!');\n      await fetch('/credit-card-validity', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ 'cc-number': formattedCreditCardNumber }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setIsValid(data.isValid);\n        });\n    } catch (error: unknown) {\n      console.log('error');\n      setIsError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        {/* <form method=\"post\" onSubmit={handleSubmit}> */}\n        <label htmlFor=\"cc-number\">Credit Card Number: </label>\n        <input\n          type=\"text\"\n          id=\"credit-card\"\n          onChange={(event) => {\n            setCreditCardNumber(event.target.value);\n            setIsValid(undefined);\n          }}\n          autoComplete=\"cc-number\"\n          inputMode=\"numeric\"\n          name=\"cc-number\"\n          //credit cards range from 12-19 characters. Allowing max length up to 25 to account for spacing and dashes users may enter\n          maxLength={25}\n          minLength={12}\n          //regex to only allow digits with spaces and dashes\n          pattern=\"([0-9 \\-]){12,25}\"\n          title=\"Credit card numbers must be between 12 and 19 digits long.\"\n          value={creditCardNumber}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <p>\n        'There was an error checking the validity of the credit card number'\n      </p>\n\n      {typeof isValid === 'boolean' && (\n        <p>\n          Credit card number {creditCardNumber} is{' '}\n          <strong>{isValid ? 'valid' : 'invalid'}</strong>.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}